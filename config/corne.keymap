/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q       &kp W           &kp F         &kp P             &kp B        &kp J    &kp L              &kp U        &kp Y            &kp SQT      &trans
&trans  &mt LGUI A  &mt LEFT_ALT R  &mt LCTRL S   &mt LEFT_SHIFT T  &kp G        &kp M    &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt LGUI O   &trans
&trans  &lt 3 Z     &kp X           &kp C         &kp D             &kp V        &kp K    &kp H              &kp COMMA    &kp DOT          &lt 3 SLASH  &trans
                                    &lt 4 ESCAPE  &lt 1 SPACE       &lt 2 TAB    &kp RET  &mo 0              &kp RALT
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans    &trans        &trans     &trans          &trans    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
&trans  &kt LGUI  &kt LEFT_ALT  &kt LCTRL  &kt LEFT_SHIFT  &trans    &kt CAPSLOCK   &kt LEFT        &kt DOWN       &kt UP        &kt RIGHT      &trans
&trans  &trans    &trans        &trans     &trans          &trans    &kp INSERT     &kp C_AC_HOME   &kp PAGE_DOWN  &kp PAGE_UP   &kp END        &trans
                                &trans     &trans          &trans    &kp ENTER      &kp BACKSPACE   &kp DELETE
            >;
        };

        mouse_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans    &trans        &trans     &trans          &trans    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY   &kp C_AC_CUT  &kp C_AC_UNDO   &trans
&trans  &kt LGUI  &kt LEFT_ALT  &kt LCTRL  &kt LEFT_SHIFT  &trans    &trans         &kp LEFT        &kp DOWN        &kp UP        &kt RIGHT       &trans
&trans  &trans    &trans        &trans     &trans          &trans    &trans         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_LEFT  &trans
                                &trans     &trans          &trans    &mkp RCLK      &mkp LCLK       &mkp MCLK
            >;
        };

        button_layer {
            bindings = <
&trans  &kp C_AC_UNDO  &kt C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kt C_AC_REDO    &kt C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY      &kt K_CUT     &kp C_AC_UNDO  &trans
&trans  &kp LGUI       &kp LALT      &kt LCTRL      &kp LSHFT       &trans           &trans         &kp LSHFT       &kt RIGHT_CONTROL  &kp RALT      &kp LGUI       &trans
&trans  &kp C_AC_UNDO  &kt C_AC_CUT  &kt C_AC_COPY  &kt C_AC_PASTE  &kt C_AC_REDO    &kt C_AC_REDO  &kt C_AC_PASTE  &kt C_AC_COPY      &kt C_AC_CUT  &kp C_AC_UNDO  &trans
                                     &mkp MCLK      &mkp LCLK       &mkp RCLK        &mkp RCLK      &mkp LCLK       &mkp MCLK
            >;
        };

        media_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans    &trans        &trans     &trans          &trans    &trans             &trans          &trans             &trans           &trans        &trans
&trans  &kt LGUI  &kt LEFT_ALT  &kt LCTRL  &kt LEFT_SHIFT  &trans    &ext_power EP_TOG  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &trans
&trans  &trans    &trans        &trans     &trans          &trans    &out OUT_TOG       &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &trans
                                &trans     &trans          &trans    &kp C_PLAY_PAUSE   &kp C_NEXT      &kp K_MUTE
            >;
        };

        num_layer {
            bindings = <
&kp  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RIGHT_PARENTHESIS    &kp  &kp              &kp        &kp            &kp       &kp
&kp  &kp SEMI   &kp N4  &kp N5  &kp N6  &kp PLUS                 &kp  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp LGUI  &kp
&kp  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp PIPE                 &kp  &kp              &kp        &kp            &kp       &kp
                        &kp     &kp N0  &kp                      &kp  &kp              &kp
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
