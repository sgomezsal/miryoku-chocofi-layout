/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <39 40 41 19 30 18 6 9 20 32 31 7 8 21 33 34 35 22 23 11 10>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 0 1 1 2 2 16 28 37 38 29 17 4 4 5 3 14 12 13 27 15 26 25 24 36>;
        };
    };

    combos {
        compatible = "zmk,combos";

        n_tilde_combo {
            bindings = <&kp U00F1>;
            key-positions = <1 21>;
        };

        n_tilde_upper_combo {
            bindings = <&kp U00D1>;
            key-positions = <21 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q        &kp W            &kp F         &kp P              &kp B        &kp J        &kp L               &kp U         &kp Y             &kp SQT      &none
&none  &hml LGUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G        &kp M        &hmr RIGHT_SHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr LGUI O  &none
&none  &lt 3 Z      &kp X            &kp C         &kp D              &kp V        &kp K        &kp H               &kp COMMA     &kp DOT           &lt 3 SLASH  &none
                                     &lt 4 ESCAPE  &lt 1 SPACE        &lt 2 TAB    &lt 6 ENTER  &lt 5 BACKSPACE     &lt 7 DELETE
            >;

            label = "Base";
        };

        nav_layer {
            bindings = <
&none  &none     &none         &none      &none           &none    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &none
&none  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp CAPSLOCK   &kp LEFT        &kp DOWN       &kp UP        &kp RIGHT      &none
&none  &none     &none         &none      &none           &none    &kp INSERT     &kp C_AC_HOME   &kp PAGE_DOWN  &kp PAGE_UP   &kp END        &none
                               &none      &none           &none    &kp ENTER      &kp BACKSPACE   &kp DELETE
            >;

            label = "Nav";
        };

        mouse_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none     &none         &none      &none           &none    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY   &kp C_AC_CUT  &kp C_AC_UNDO   &none
&none  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &none          &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT       &none
&none  &none     &none         &none      &none           &none    &none          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_LEFT  &none
                               &none      &none           &none    &mkp RCLK      &mkp LCLK       &mkp MCLK
            >;

            label = "Mouse";
        };

        button_layer {
            bindings = <
&none  &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_REDO    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY      &kp K_CUT     &kp C_AC_UNDO  &none
&none  &kp LGUI       &kp LALT      &kp LCTRL      &kp LSHFT       &none            &none          &kp LSHFT       &kp RIGHT_CONTROL  &kp RALT      &kp LGUI       &none
&none  &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_REDO    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY      &kp C_AC_CUT  &kp C_AC_UNDO  &none
                                    &mkp MCLK      &mkp LCLK       &mkp RCLK        &mkp RCLK      &mkp LCLK       &mkp MCLK
            >;

            label = "Button";
        };

        media_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none     &none         &none      &none           &none    &none              &none           &none              &none            &none         &none
&none  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &ext_power EP_TOG  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &none
&none  &none     &none         &none      &none           &none    &out OUT_TOG       &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &none
                               &none      &none           &none    &kp C_PLAY_PAUSE   &kp C_NEXT      &kp K_MUTE
            >;

            label = "Media";
        };

        num_layer {
            bindings = <
&none  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RIGHT_BRACKET    &none  &none            &none      &none          &none     &none
&none  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL            &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp LGUI  &none
&none  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BACKSLASH        &none  &none            &none      &none          &none     &none
                          &kp DOT  &kp N0  &kp MINUS            &none  &none            &none
            >;

            label = "Num";
        };

        sym_layer {
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp KP_MULTIPLY       &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none  &none            &none      &none          &none     &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp LGUI  &none
&none  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none  &none            &none      &none          &none     &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &none  &none            &none
            >;

            label = "Sym";
        };

        fun_layer {
            bindings = <
&none  &kp F12  &kp F7  &kp F8      &kp F9     &kp SYSREQ         &none  &none            &none      &none          &none     &none
&none  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp LGUI  &none
&none  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &none  &none            &none      &none          &none     &none
                        &kp C_MENU  &kp SPACE  &kp TAB            &none  &none            &none
            >;

            label = "Fun";
        };
    };
};
